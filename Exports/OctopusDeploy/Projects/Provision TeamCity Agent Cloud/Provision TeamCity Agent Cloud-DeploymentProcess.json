{
  "$type": "Octopus.Core.Model.Projects.DeploymentProcess, Octopus.Core",
  "Id": "deploymentprocess-Projects-6",
  "OwnerId": "Projects-6",
  "Version": 32,
  "Steps": [
    {
      "Id": "17f4df42-d6af-4d72-8b14-d0a6f9f89cb6",
      "Name": "Copy DSC Configurations",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "57f3e4df-e29b-4f68-bff6-2e1750f96c4a",
          "Name": "Copy DSC Configurations",
          "ActionType": "Octopus.Script",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.RunOnServer": "true",
            "Octopus.Action.Script.ScriptFileName": "Copy-AzureFileShare.ps1",
            "Octopus.Action.Package.FeedId": "feeds-builtin",
            "Octopus.Action.Package.PackageId": "AutomationStackScripts.Storage",
            "Octopus.Action.Script.ScriptParameters": "-StorageAccountName #{StorageAccountName} -StorageAccountKey #{StorageAccountKey} -FileShareName #{FileShareName} -LocalPath #{LocalPath}",
            "Octopus.Action.Template.Id": "ActionTemplates-24",
            "Octopus.Action.Template.Version": "1",
            "StorageAccountName": "#{StackResourcesName}",
            "StorageAccountKey": "#{StackResourcesKey}",
            "LocalPath": "dsc",
            "FileShareName": "dsc"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "Azure Automation"
      }
    },
    {
      "Id": "b58e3359-917a-4fbe-8e3c-8e80aca4cba2",
      "Name": "Import DSC Configuration",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "8f8cda61-d1e9-48d0-86a4-3a7859180ae3",
          "Name": "Import DSC Configuration",
          "ActionType": "Octopus.AzurePowerShell",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Package.FeedId": "feeds-builtin",
            "Octopus.Action.Script.ScriptFileName": "Import-TeamCityConfig.ps1",
            "Octopus.Action.Package.PackageId": "AutomationStackScripts.Automation",
            "Octopus.Action.Script.ScriptParameters": "-Path dsc -InfraRg #{InfraRg} -AutomationAccountName #{AutomationAccountName} -OctopusServerUrl #{OctopusHostHeader} -OctopusApiKey #{APIKey} -OctopusEnvironment #{TeamCityRg} -OctopusRole 'TeamCity Server (Windows)' -OctopusDisplayName 'TeamCity Server'"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "Azure Automation"
      }
    },
    {
      "Id": "6ea370e7-796b-4d7d-b5ae-4cdf1f1025e1",
      "Name": "Create Resource Group",
      "Condition": "Success",
      "StartTrigger": "StartWithPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "2cb1274b-c27e-4372-a0e1-536de71fd578",
          "Name": "Create Resource Group",
          "ActionType": "Octopus.AzurePowerShell",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Package.FeedId": "feeds-builtin",
            "Octopus.Action.Script.ScriptFileName": "New-ResourceGroup.ps1",
            "Octopus.Action.Package.PackageId": "AutomationStackScripts.Resources",
            "Octopus.Action.Script.ScriptParameters": "-ResourceGroupName #{ResourceGroupName} -Location #{Location}",
            "ResourceGroupName": "#{ResourceGroup}",
            "Location": "#{AzureRegion}",
            "Octopus.Action.Template.Id": "ActionTemplates-5",
            "Octopus.Action.Template.Version": "5"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "ARM Provisioning"
      }
    },
    {
      "Id": "29dcf8e4-c64a-4d66-b57e-d710ba06ce47",
      "Name": "Provision Windows Server 2016 VM",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "7e82a6aa-92f8-461e-8891-0539e14d3db3",
          "Name": "Provision Windows Server 2016 VM",
          "ActionType": "Octopus.AzureResourceGroup",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Azure.ResourceGroupName": "#{ResourceGroupName}",
            "Octopus.Action.Azure.TemplateSource": "Inline",
            "Octopus.Action.Azure.ResourceGroupTemplateParameters": "{\"infraResourceGroup\":{\"value\":\"#{InfraResourceGroup}\"},\"udp\":{\"value\":\"#{UDP}\"},\"productName\":{\"value\":\"#{ProductName}\"},\"vmSize\":{\"value\":\"Standard_F4s\"},\"vmAdminUsername\":{\"value\":\"#{VMSize}\"},\"vmAdminPassword\":{\"reference\":{\"keyVault\":{\"id\":\"#{KeyVaultResourceId}\"},\"secretName\":\"#{VMAdminPasswordSecretName}\"}},\"registrationKey\":{\"reference\":{\"keyVault\":{\"id\":\"#{KeyVaultResourceId}\"},\"secretName\":\"#{AutomationRegistrationKey}\"}},\"registrationUrl\":{\"value\":\"#{registrationUrl}\"},\"nodeConfigurationName\":{\"value\":\"#{nodeConfigurationName}\"},\"timestamp\":{\"value\":\"#{Octopus.Deployment.CreatedUtc}\"}}",
            "Octopus.Action.Azure.ResourceGroupDeploymentMode": "Complete",
            "Octopus.Action.Azure.ResourceGroupTemplate": "{\r\n  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\r\n  \"contentVersion\": \"1.0.0.0\",\r\n  \"parameters\": {\r\n    \"infraResourceGroup\": {\r\n      \"type\": \"string\",\r\n      \"metadata\": {\r\n        \"description\": \"Name of the resource group containing the core automationstack infrastructure\"\r\n      }\r\n    },\r\n    \"udp\": {\r\n      \"type\": \"string\",\r\n      \"metadata\": {\r\n        \"description\": \"Unique Deployment Prefix to avoid name collisions\"\r\n      }\r\n    },\r\n    \"productName\": {\r\n      \"type\": \"string\",\r\n      \"metadata\": {\r\n        \"description\": \"Name of the product that is running on this VM\"\r\n      }\r\n    },\r\n    \"vmSize\": {\r\n      \"type\": \"string\",\r\n      \"defaultValue\": \"Standard_F4s\",\r\n      \"metadata\": {\r\n        \"description\": \"Size of the VM\"\r\n      }\r\n    },\r\n    \"vmAdminUsername\": {\r\n      \"type\": \"string\",\r\n      \"metadata\": {\r\n        \"description\": \"Username for the Virtual Machine.\"\r\n      }\r\n    },\r\n    \"vmAdminPassword\": {\r\n      \"type\": \"securestring\",\r\n      \"metadata\": {\r\n        \"description\": \"Password for the Virtual Machine.\"\r\n      }\r\n    },\r\n    \"registrationKey\": {\r\n      \"type\": \"securestring\",\r\n      \"metadata\": {\r\n        \"Description\": \"Registration key to use to onboard to the Azure Automation DSC pull/reporting server\"\r\n      }\r\n    },\r\n    \"registrationUrl\": {\r\n      \"type\": \"string\",\r\n      \"metadata\": {\r\n        \"Description\": \"Registration url of the Azure Automation DSC pull/reporting server\"\r\n      }\r\n    },\r\n    \"nodeConfigurationName\": {\r\n      \"type\": \"string\",\r\n      \"metadata\": {\r\n        \"Description\": \"The name of the node configuration, on the Azure Automation DSC pull server, that this node to pick up\"\r\n      }\r\n    },\r\n    \"timestamp\": {\r\n      \"type\": \"string\",\r\n      \"defaultValue\": \"MM/dd/yyyy H:mm:ss tt\",\r\n      \"metadata\": {\r\n        \"description\": \"The current datetime, as a string, to force the request to go through ARM even if all fields are the same as last ARM deployment of this template; example in parameters file is in MM/dd/yyyy H:mm:ss tt format\"\r\n      }\r\n    }\r\n  },\r\n  \"variables\": {\r\n    \"vmName\": \"[concat(parameters('productName'),'VM')]\",\r\n    \"vmStorageName\": \"[concat('vmvhds', parameters('udp'), uniquestring(resourceGroup().id))]\",\r\n    \"nicName\": \"[concat(parameters('productName'),'NIC')]\",\r\n    \"virtualNetworkId\": \"[resourceId(parameters('infraResourceGroup'), 'Microsoft.Network/virtualNetworks', 'VirtualNetwork')]\",\r\n    \"subnetId\": \"[concat(variables('virtualNetworkId'),'/subnets/', 'Default')]\"\r\n  },\r\n  \"resources\": [{\r\n    \"apiVersion\": \"2016-01-01\",\r\n    \"type\": \"Microsoft.Storage/storageAccounts\",\r\n    \"name\": \"[variables('vmStorageName')]\",\r\n    \"location\": \"[resourceGroup().location]\",\r\n    \"sku\": {\r\n      \"name\": \"Premium_LRS\",\r\n      \"tier\": \"Premium\"\r\n    },\r\n    \"kind\": \"Storage\",\r\n    \"properties\": {\r\n    }\r\n  }, {\r\n    \"apiVersion\": \"2015-06-15\",\r\n    \"type\": \"Microsoft.Network/networkInterfaces\",\r\n    \"name\": \"[variables('nicName')]\",\r\n    \"location\": \"[resourceGroup().location]\",\r\n    \"properties\": {\r\n      \"ipConfigurations\": [{\r\n        \"name\": \"[concat(parameters('productName'),'-IPConfig')]\",\r\n        \"properties\": {\r\n          \"privateIPAllocationMethod\": \"Dynamic\",\r\n          \"subnet\": {\r\n            \"id\": \"[variables('subnetId')]\"\r\n          }\r\n        }\r\n      }]\r\n    }\r\n  },{\r\n    \"apiVersion\": \"2015-06-15\",\r\n    \"type\": \"Microsoft.Compute/virtualMachines\",\r\n    \"name\": \"[variables('vmName')]\",\r\n    \"location\": \"[resourceGroup().location]\",\r\n    \"dependsOn\": [\r\n      \"[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageName'))]\",\r\n      \"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]\"\r\n    ],\r\n    \"properties\": {\r\n      \"hardwareProfile\": {\r\n        \"vmSize\": \"[parameters('vmSize')]\"\r\n      },\r\n      \"osProfile\": {\r\n        \"computerName\": \"[variables('vmName')]\",\r\n        \"adminUsername\": \"[parameters('vmAdminUsername')]\",\r\n        \"adminPassword\": \"[parameters('vmAdminPassword')]\",\r\n        \"windowsConfiguration\": {\r\n          \"provisionVMAgent\": true,\r\n          \"enableAutomaticUpdates\": true\r\n        }\r\n      },\r\n      \"storageProfile\": {\r\n        \"imageReference\": {\r\n          \"publisher\": \"MicrosoftWindowsServer\",\r\n          \"offer\": \"WindowsServer\",\r\n          \"sku\": \"2016-Datacenter\",\r\n          \"version\": \"latest\"\r\n        },\r\n        \"osDisk\": {\r\n          \"name\": \"[concat(variables('vmName'),'-OS')]\",\r\n          \"vhd\": {\r\n            \"uri\": \"[concat('http://',variables('vmStorageName'),'.blob.core.windows.net/vhds/',variables('vmName'),'-OS.vhd')]\"\r\n          },\r\n          \"caching\": \"ReadWrite\",\r\n          \"createOption\": \"FromImage\"\r\n        }\r\n      },\r\n      \"networkProfile\": {\r\n        \"networkInterfaces\": [{\r\n          \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\"\r\n        }]\r\n      }\r\n    },\r\n    \"resources\": [{\r\n      \"type\": \"extensions\",\r\n      \"name\": \"Microsoft.Powershell.DSC\",\r\n      \"apiVersion\": \"2015-06-15\",\r\n      \"location\": \"[resourceGroup().location]\",\r\n      \"properties\": {\r\n        \"publisher\": \"Microsoft.Powershell\",\r\n        \"type\": \"DSC\",\r\n        \"typeHandlerVersion\": \"2.19\",\r\n        \"autoUpgradeMinorVersion\": true,\r\n        \"protectedSettings\": {\r\n          \"Items\": {\r\n            \"registrationKeyPrivate\": \"[parameters('registrationKey')]\"\r\n          }\r\n        },\r\n        \"settings\": {\r\n          \"ModulesUrl\": \"https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip\",\r\n          \"SasToken\": \"\",\r\n          \"ConfigurationFunction\": \"RegistrationMetaConfigV2.ps1\\\\RegistrationMetaConfigV2\",\r\n          \"Properties\": [{\r\n            \"Name\": \"RegistrationKey\",\r\n            \"Value\": {\r\n              \"UserName\": \"PLACEHOLDER_DONOTUSE\",\r\n              \"Password\": \"PrivateSettingsRef:registrationKeyPrivate\"\r\n            },\r\n            \"TypeName\": \"System.Management.Automation.PSCredential\"\r\n          }, {\r\n            \"Name\": \"RegistrationUrl\",\r\n            \"Value\": \"[parameters('registrationUrl')]\",\r\n            \"TypeName\": \"System.String\"\r\n          }, {\r\n            \"Name\": \"NodeConfigurationName\",\r\n            \"Value\": \"[parameters('nodeConfigurationName')]\",\r\n            \"TypeName\": \"System.String\"\r\n          }, {\r\n            \"Name\": \"ConfigurationMode\",\r\n            \"Value\": \"ApplyAndAutocorrect\",\r\n            \"TypeName\": \"System.String\"\r\n          }, {\r\n            \"Name\": \"ConfigurationModeFrequencyMins\",\r\n            \"Value\": 15,\r\n            \"TypeName\": \"System.Int32\"\r\n          }, {\r\n            \"Name\": \"RefreshFrequencyMins\",\r\n            \"Value\": 30,\r\n            \"TypeName\": \"System.Int32\"\r\n          }, {\r\n            \"Name\": \"RebootNodeIfNeeded\",\r\n            \"Value\": true,\r\n            \"TypeName\": \"System.Boolean\"\r\n          }, {\r\n            \"Name\": \"ActionAfterReboot\",\r\n            \"Value\": \"ContinueConfiguration\",\r\n            \"TypeName\": \"System.String\"\r\n          }, {\r\n            \"Name\": \"AllowModuleOverwrite\",\r\n            \"Value\": true,\r\n            \"TypeName\": \"System.Boolean\"\r\n          }, {\r\n            \"Name\": \"Timestamp\",\r\n            \"Value\": \"[parameters('timestamp')]\",\r\n            \"TypeName\": \"System.String\"\r\n          }]\r\n        }\r\n      },\r\n        \"dependsOn\": [\r\n          \"[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]\"\r\n        ]\r\n    }]\r\n  }]\r\n}",
            "Octopus.Action.Template.Id": "ActionTemplates-1",
            "Octopus.Action.Template.Version": "1",
            "InfraResourceGroup": "#{InfraRg}",
            "UDP": "#{UDP}",
            "VMSize": "Standard_F4s",
            "KeyVaultResourceId": "#{KeyVaultResourceId}",
            "VMAdminPasswordSecretName": "VMAdminPassword",
            "AutomationRegistrationKey": "AutomationRegistrationKey",
            "registrationUrl": "#{AutomationRegistrationUrl}",
            "ResourceGroupName": "#{ResourceGroup}",
            "ProductName": "#{ProductName}",
            "nodeConfigurationName": "TeamCity.CloudAgent"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "ARM Provisioning"
      }
    },
    {
      "Id": "5e0a3ac7-7ec8-41ce-93ba-34a60c3d7782",
      "Name": "Wait for DSC Node Compliance",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "122750af-9377-4cba-a07b-9b654e99dd92",
          "Name": "Wait for DSC Node Compliance",
          "ActionType": "Octopus.AzurePowerShell",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Package.FeedId": "feeds-builtin",
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Script.ScriptSource": "Package",
            "Octopus.Action.Script.ScriptFileName": "Wait-NodeCompliance.ps1",
            "Octopus.Action.Package.PackageId": "AutomationStackScripts.Automation",
            "Octopus.Action.Script.ScriptParameters": "-ResourceGroupName #{ResourceGroupName} -AutomationAccountName #{AutomationAccountName} -NodeName #{NodeName}",
            "Octopus.Action.Template.Id": "ActionTemplates-23",
            "Octopus.Action.Template.Version": "1",
            "ResourceGroupName": "#{InfraRg}",
            "AutomationAccountName": "#{AutomationAccountName}",
            "NodeName": "#{VMName}"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "Azure Automation"
      }
    },
    {
      "Id": "653da013-f15c-4b74-a836-51380fe206a3",
      "Name": "Wait until ready for image capture",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "f5e668b2-6188-4f38-81b1-b1f837dbc702",
          "Name": "Wait until ready for image capture",
          "ActionType": "Octopus.Manual",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Manual.Instructions": "Proceed when ready to capture an image of the virtual machine"
          }
        }
      ],
      "Properties": {}
    },
    {
      "Id": "15750c37-d131-4a53-a8d3-eb05dff1be67",
      "Name": "Capture Agent VM Image",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "9cbf30cc-83c8-496c-82ef-d4d75054a6f8",
          "Name": "Run Sysprep",
          "ActionType": "Octopus.Script",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.RunOnServer": "false",
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.ScriptBody": "Set-Location (Join-Path $env:windir 'system32\\sysprep')\n& sysprep.exe /oobe /generalize /quiet /shutdown"
          }
        },
        {
          "Id": "8025cd3c-b72f-4321-8f90-431ee1d89b79",
          "Name": "Deallocate Agent VM",
          "ActionType": "Octopus.AzurePowerShell",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.ScriptBody": "Stop-AzureRmVM -ResourceGroupName $ResourceGroup -Name $VMName"
          }
        },
        {
          "Id": "2a6b3a11-b10b-4856-8898-02e61dfa8b8e",
          "Name": "Set Agent VM to Generalized",
          "ActionType": "Octopus.AzurePowerShell",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.ScriptBody": " Set-AzureRmVm -ResourceGroupName $ResourceGroup -Name $VMName -Generalized"
          }
        },
        {
          "Id": "ebf01d5e-4c9e-4010-b375-0fc7fa335763",
          "Name": "Create Cloud Agent VHD Image",
          "ActionType": "Octopus.AzurePowerShell",
          "IsDisabled": false,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Azure.AccountId": "azureserviceprincipal-microsoft-azure-service-principal",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.ScriptBody": " Save-AzureRmVMImage -ResourceGroupName $ResourceGroup -Name $VMName -DestinationContainerName images -VHDNamePrefix AgentCloud -Path ('D:\\TCAgent-{0}.json' -f $OctopusParameters['Octopus.Deployment.Id'])"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "TeamCity Agent Image"
      }
    }
  ],
  "RelatedDocumentIds": []
}